@import url('https://fonts.googleapis.com/css?family=Roboto+Slab:400,700|IBM+Plex+Sans:400,400i,700,700i');

*,
*:before,
*:after {
    box-sizing: border-box;
}

body {
    margin: 2em;
    font-family: 'IBM Plex Sans', sans-serif;
    background-color: #fff;
}

h1, h2 {
  font-family: 'Roboto Slab', sans-serif;
}

a {
  color: inherit;
}
/* What we're working on here: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Realizing_common_layouts_using_CSS_Grid_Layout */


/* use `grid-template-areas` to create this layout. outside of any media queries we need to name the areas. we name using the `grid-area` property. */

.main-head {
  grid-area: header;
}

.content {
  grid-area: content;
}

.main-nav {
  grid-area: nav;
}

.side {
  grid-area: sidebar;
}

.ad {
  grid-area: ad;
}

.main-footer {
  grid-area: footer;
}

/* outside of any media queries we set up the layout for mobile width. everything is in source order (see https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/CSS_Grid_Layout_and_Accessibility for accessiblity rationale). */

.wrapper {
  display: grid;
  grid-gap: 20px;
  grid-template-areas: 
    "header"
    "nav"
    "content"
    "sidebar"
    "ad"
    "footer";
}

/* after setting up mobile layout we get single column at all sizes. add media queries to redefine layout. */

@media (min-width: 700px) {
  .wrapper {
    grid-template-columns: 1fr 3fr;
    grid-template-areas: 
      "header header"
      "nav nav"
      "sidebar content"
      "ad footer"
  }
  nav ul {
    display: flex;
    justify-content: space-between;
  }
}

/* let's move to the 3-col layout for wider screens */

@media (min-width: 1024px) {
  .wrapper {
    grid-template-columns: 1fr 4fr 1fr;
    grid-template-areas: 
      "header header header"
      "nav content sidebar"
      "nav content ad"
      "footer footer footer"
  }
  nav ul {
    flex-direction: column;
  }
}

/* If we want ot for whatever reason not use grid-template-areas, we can do this same layout with basic 12-column grid of 1fr-unit column tracks: https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Grid_Layout/Realizing_common_layouts_using_CSS_Grid_Layout#A_flexible_12-column_layout */


/* for demo purposes */

.wrapper > * {
  background-color: #999;
  border-radius: 5px;
  color: #fff;
  padding: 1.5em;
  margin-bottom: 1em;
}

.content {
  background-color: #fff;
  border-radius: 0;
  color: #999;
  padding: 0;
  font-size: 1.25em;
  line-height: 1.4;
}